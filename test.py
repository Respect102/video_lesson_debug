class MyRange:
    def __init__(self, start, end):
        # Установить начальное значение последовательности. 
        self.current = start
        # Установить конечное значение последовательности.
        self.end = end
    
    # Метод, который возвращает сам объект (self) в качестве итератора.
    def __iter__(self):
        return self
    
    # Метод, который реализует логику получения следующего 
    # элемента последовательности.
    def __next__(self):
        # Если начальное значение последовательности меньше или равно 
        # конечному значению...
        if self.current <= self.end:
            # ...вернуть текущее значение...
            value = self.current
            # ...и увеличить его на 1.
            self.current += 1
            return value
        # Иначе...
        else:
            # выбросить исключение StopIteration, чтобы указать, 
            # что элементы в последовательности закончились.
            raise StopIteration


# Тут используется описанный в классе итератор: 
# создать объект класса MyRange с начальным значением 1 
# и конечным значением 5.
my_iterator = MyRange(1, 5)

# Здесь происходит итерация по объекту my_iterator:
# к каждой итерации получить значение с помощью метода __next__ 
# и это значение присвоить переменной num.
for num in my_iterator:
    print(num)